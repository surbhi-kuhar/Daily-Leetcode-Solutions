class Solution {
public:

    void merge(vector<int>&arr,int l,int r,int mid){
        int n1=mid-l+1;
        int n2=r-mid;

        int arr1[n1];
        int arr2[n2];

        for(int i=0;i<n1;i++){
            arr1[i]=arr[l+i];
        }

        for(int i=0;i<n2;i++){
            arr2[i]=arr[i+mid+1];
        }

        int i=0,j=0,k=l;

        while(i<n1 && j<n2){
            if(arr1[i]<=arr2[j]){
                arr[k]=arr1[i];
                i++;
               
            }
            else{
                arr[k]=arr2[j];
                j++; 
            }
            k++;
        }

        while(i<n1){
                arr[k]=arr1[i];
                i++;
                k++;
        }

        while(j<n2){
                arr[k]=arr2[j];
                j++;
                k++;
        }
 
    }

    void solve(vector<int>&nums,int l,int r){
        
        if(l<r){
            int mid=(l+r)/2;
            solve(nums,l,mid);
            solve(nums,mid+1,r);
            merge(nums,l,r,mid);
        }
    }
    vector<int> sortArray(vector<int>& nums) {
        
        int n=nums.size();
       
        solve(nums,0,n-1);

        return nums;

    }
};
